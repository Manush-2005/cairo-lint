//! > always in zero

//! > cairo_code
fn main() {
    let x: u32 = 1;
    let _result = 0 * x;
    let _result = x * 0;
    let _result = 0 / x;
    let _result = x & 0;
    let _result = 0 & x;
	let _result = (x + x) * 0;
}

//! > diagnostics
error: Plugin diagnostic: This operation will always result in zero and can be simplified.
 --> lib.cairo:3:19
    let _result = 0 * x;
                  ^***^

error: Plugin diagnostic: This operation will always result in zero and can be simplified.
 --> lib.cairo:4:19
    let _result = x * 0;
                  ^***^

error: Plugin diagnostic: This operation will always result in zero and can be simplified.
 --> lib.cairo:5:19
    let _result = 0 / x;
                  ^***^

error: Plugin diagnostic: This operation will always result in zero and can be simplified.
 --> lib.cairo:6:19
    let _result = x & 0;
                  ^***^

error: Plugin diagnostic: This operation will always result in zero and can be simplified.
 --> lib.cairo:7:19
    let _result = 0 & x;
                  ^***^

error: Plugin diagnostic: This operation will always result in zero and can be simplified.
 --> lib.cairo:8:16
	let _result = (x + x) * 0;
               ^*********^

//! > fixed
fn main() {
    let x: u32 = 1;
    let _result = 0 * x;
    let _result = x * 0;
    let _result = 0 / x;
    let _result = x & 0;
    let _result = 0 & x;
	let _result = (x + x) * 0;
}
